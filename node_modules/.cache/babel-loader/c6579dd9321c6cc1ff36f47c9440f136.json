{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/Nand2Tetris React Projects/VM Translator/src/Components/Commenthandling.js\";\nimport Codewriter from './Codewriter';\nimport React from 'react';\n\nconst Commenthandling = ({\n  content\n}) => {\n  const regexSyntax = /[A-Za-z]/;\n  const content_main = [];\n\n  for (var x = 0; x < content.length; x++) {\n    const singleLine = content[x].trim();\n\n    if (!singleLine.startsWith(\"//\") && regexSyntax.test(singleLine)) {\n      if (singleLine.includes(\"//\")) {\n        const index = singleLine.indexOf(\"/\");\n        content_main.push(singleLine.slice(0, index).trim());\n      } else {\n        content_main.push(singleLine.trim());\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Codewriter, {\n    content: content_main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Commenthandling;","map":{"version":3,"sources":["/home/mike/Documents/Nand2Tetris React Projects/VM Translator/src/Components/Commenthandling.js"],"names":["Codewriter","React","Commenthandling","content","regexSyntax","content_main","x","length","singleLine","trim","startsWith","test","includes","index","indexOf","push","slice"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAEnC,QAAMC,WAAW,GAAG,UAApB;AAEA,QAAMC,YAAY,GAAG,EAArB;;AAEA,OAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAGH,OAAO,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,UAAME,UAAU,GAAGL,OAAO,CAACG,CAAD,CAAP,CAAWG,IAAX,EAAnB;;AACA,QAAG,CAACD,UAAU,CAACE,UAAX,CAAsB,IAAtB,CAAD,IAAgCN,WAAW,CAACO,IAAZ,CAAiBH,UAAjB,CAAnC,EAAiE;AAC7D,UAAGA,UAAU,CAACI,QAAX,CAAoB,IAApB,CAAH,EAA6B;AACrB,cAAMC,KAAK,GAAGL,UAAU,CAACM,OAAX,CAAmB,GAAnB,CAAd;AACAT,QAAAA,YAAY,CAACU,IAAb,CAAmBP,UAAU,CAACQ,KAAX,CAAiB,CAAjB,EAAmBH,KAAnB,CAAD,CAA4BJ,IAA5B,EAAlB;AACP,OAHD,MAII;AACAJ,QAAAA,YAAY,CAACU,IAAb,CAAkBP,UAAU,CAACC,IAAX,EAAlB;AACH;AAED;AACH;;AACL,sBAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEJ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFR;AAOH,CA1BD;;AA4BA,eAAeH,eAAf","sourcesContent":["import Codewriter from './Codewriter';\nimport React from 'react';\n\nconst Commenthandling = ({content}) => {\n\n    const regexSyntax = /[A-Za-z]/\n\n    const content_main = [];\n\n    for(var x= 0;x < content.length; x++){\n        const singleLine = content[x].trim();\n        if(!singleLine.startsWith(\"//\") && regexSyntax.test(singleLine)) {\n            if(singleLine.includes(\"//\")){\n                    const index = singleLine.indexOf(\"/\");\n                    content_main.push((singleLine.slice(0,index)).trim());\n            }\n            else{\n                content_main.push(singleLine.trim());\n            }\n\n           }\n        }\n    return (\n\n            <div>\n            <Codewriter content={content_main}/>\n            </div>\n\n    );\n}\n\nexport default Commenthandling;"]},"metadata":{},"sourceType":"module"}