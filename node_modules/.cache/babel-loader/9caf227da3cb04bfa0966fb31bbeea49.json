{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/Assembler/src/Components/Commenthandling.js\";\nimport Labelhandling from './SymbolsHandling/Labelhandling';\nimport { React } from 'react';\n\nconst Commenthandling = ({\n  content\n}) => {\n  const regexAinst = /@/;\n  const regexCinst = /[A-Za-z]/; // console.log(\"This is from Comment Beginning\",content)\n\n  const content_main = [];\n\n  for (var x = 0; x < content.length; x++) {\n    const singleLine = content[x].trim();\n\n    if (!singleLine.startsWith(\"//\") && (regexAinst.test(singleLine) || regexCinst.test(singleLine))) {\n      if (singleLine.includes(\"//\")) {\n        const index = singleLine.indexOf(\"/\");\n        content_main.push(singleLine.slice(0, index).trim());\n      } else {\n        content_main.push(singleLine.trim());\n      }\n    }\n  }\n\n  console.log(\"This is from Comment LAst\", content_main);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Labelhandling, {\n    content: content_main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Commenthandling;","map":{"version":3,"sources":["/home/mike/Documents/Assembler/src/Components/Commenthandling.js"],"names":["Labelhandling","React","Commenthandling","content","regexAinst","regexCinst","content_main","x","length","singleLine","trim","startsWith","test","includes","index","indexOf","push","slice","console","log"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iCAA1B;AACA,SAAQC,KAAR,QAAoB,OAApB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAEnC,QAAMC,UAAU,GAAG,GAAnB;AACA,QAAMC,UAAU,GAAG,UAAnB,CAHmC,CAKnC;;AAKA,QAAMC,YAAY,GAAG,EAArB;;AAEA,OAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAGJ,OAAO,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,UAAME,UAAU,GAAGN,OAAO,CAACI,CAAD,CAAP,CAAWG,IAAX,EAAnB;;AACA,QAAG,CAACD,UAAU,CAACE,UAAX,CAAsB,IAAtB,CAAD,KAAiCP,UAAU,CAACQ,IAAX,CAAgBH,UAAhB,KAA+BJ,UAAU,CAACO,IAAX,CAAgBH,UAAhB,CAAhE,CAAH,EAAiG;AAC7F,UAAGA,UAAU,CAACI,QAAX,CAAoB,IAApB,CAAH,EAA6B;AACrB,cAAMC,KAAK,GAAGL,UAAU,CAACM,OAAX,CAAmB,GAAnB,CAAd;AACAT,QAAAA,YAAY,CAACU,IAAb,CAAmBP,UAAU,CAACQ,KAAX,CAAiB,CAAjB,EAAmBH,KAAnB,CAAD,CAA4BJ,IAA5B,EAAlB;AACP,OAHD,MAII;AACAJ,QAAAA,YAAY,CAACU,IAAb,CAAkBP,UAAU,CAACC,IAAX,EAAlB;AACH;AAED;AACH;;AACDQ,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCb,YAAxC;AAEJ,sBAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEA,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFR;AAMH,CAjCD;;AAmCA,eAAeJ,eAAf","sourcesContent":["import Labelhandling from './SymbolsHandling/Labelhandling';\nimport {React} from 'react';\n\nconst Commenthandling = ({content}) => {\n\n    const regexAinst = /@/\n    const regexCinst = /[A-Za-z]/\n\n    // console.log(\"This is from Comment Beginning\",content)\n    \n\n    \n\n    const content_main = [];\n\n    for(var x= 0;x < content.length; x++){\n        const singleLine = content[x].trim();\n        if(!singleLine.startsWith(\"//\") && (regexAinst.test(singleLine) || regexCinst.test(singleLine))) {\n            if(singleLine.includes(\"//\")){\n                    const index = singleLine.indexOf(\"/\");\n                    content_main.push((singleLine.slice(0,index)).trim());\n            }\n            else{\n                content_main.push(singleLine.trim());\n            }\n\n           }\n        }\n        console.log(\"This is from Comment LAst\",content_main)\n\n    return (\n\n            <div>\n            <Labelhandling content={content_main}/>\n            </div>\n    );\n}\n\nexport default Commenthandling;"]},"metadata":{},"sourceType":"module"}