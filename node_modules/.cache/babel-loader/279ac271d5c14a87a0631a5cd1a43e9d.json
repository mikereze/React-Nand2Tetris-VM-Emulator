{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/Nand2Tetris React Projects/VM Translator/src/Components/Codewriter.js\";\nimport React from 'react';\n\nconst Codewriter = ({\n  content\n}) => {\n  const Assembly_code = \"\";\n\n  const pushHandler = singleLine_content => {\n    if (singleLine_content.includes(\"constant\")) {\n      const temp = singleLine_content.replace(\"push\", \"\");\n      const temp2 = temp.replace(\"constant\", \"\");\n      return console.log(\"This is the Number in the Constant\", temp2);\n    } else if (singleLine_content.includes(\"pointer\")) {\n      return console.log(\"This is the Push Pointer Handler\", singleLine_content);\n    } else if (singleLine_content.includes(\"static\")) {\n      return console.log(\"This is the Push Static Handler\", singleLine_content);\n    } else {\n      return console.log(\"This is the Push Rest of the Members\", singleLine_content);\n    }\n  };\n\n  const popHandler = singleLine_content => {\n    if (singleLine_content.includes(\"constant\")) {\n      return console.log(\"THis is the Pop Constant Handler\", singleLine_content);\n    } else if (singleLine_content.includes(\"pointer\")) {\n      return console.log(\"This is the Pop Pointer Handler\", singleLine_content);\n    } else if (singleLine_content.includes(\"static\")) {\n      return console.log(\"This is the Pop Static Handler\", singleLine_content);\n    } else {\n      return console.log(\"This is the Pop Rest of the Members\", singleLine_content);\n    }\n  };\n\n  const artihmeticHandler = singleLine_content => {\n    return console.log(\"This is the Arthimetic Members\", singleLine_content);\n  };\n\n  const codeReplacer = singleLine_content => {\n    if (singleLine_content.startsWith(\"push\")) {\n      pushHandler(singleLine_content);\n    } else if (singleLine_content.startsWith(\"pop\")) {\n      popHandler(singleLine_content);\n    } else {\n      artihmeticHandler(singleLine_content);\n    }\n  };\n\n  content.map(item => codeReplacer(item));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Yo Niggas\");\n};\n\nexport default Codewriter;","map":{"version":3,"sources":["/home/mike/Documents/Nand2Tetris React Projects/VM Translator/src/Components/Codewriter.js"],"names":["React","Codewriter","content","Assembly_code","pushHandler","singleLine_content","includes","temp","replace","temp2","console","log","popHandler","artihmeticHandler","codeReplacer","startsWith","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAE9B,QAAMC,aAAa,GAAG,EAAtB;;AAEA,QAAMC,WAAW,GAAIC,kBAAD,IAAwB;AACxC,QAAGA,kBAAkB,CAACC,QAAnB,CAA4B,UAA5B,CAAH,EAA2C;AACvC,YAAMC,IAAI,GAAGF,kBAAkB,CAACG,OAAnB,CAA2B,MAA3B,EAAkC,EAAlC,CAAb;AACA,YAAMC,KAAK,GAAGF,IAAI,CAACC,OAAL,CAAa,UAAb,EAAwB,EAAxB,CAAd;AACA,aAAOE,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAiDF,KAAjD,CAAP;AACH,KAJD,MAKK,IAAGJ,kBAAkB,CAACC,QAAnB,CAA4B,SAA5B,CAAH,EAA0C;AAC3C,aAAOI,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CN,kBAA/C,CAAP;AACH,KAFI,MAGA,IAAGA,kBAAkB,CAACC,QAAnB,CAA4B,QAA5B,CAAH,EAAyC;AAC1C,aAAOI,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA8CN,kBAA9C,CAAP;AACH,KAFI,MAGD;AACA,aAAOK,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAmDN,kBAAnD,CAAP;AACH;AACJ,GAfD;;AAgBA,QAAMO,UAAU,GAAIP,kBAAD,IAAwB;AACvC,QAAGA,kBAAkB,CAACC,QAAnB,CAA4B,UAA5B,CAAH,EAA2C;AACvC,aAAOI,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CN,kBAA/C,CAAP;AACH,KAFD,MAGK,IAAGA,kBAAkB,CAACC,QAAnB,CAA4B,SAA5B,CAAH,EAA0C;AAC3C,aAAOI,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA8CN,kBAA9C,CAAP;AACH,KAFI,MAGA,IAAGA,kBAAkB,CAACC,QAAnB,CAA4B,QAA5B,CAAH,EAAyC;AAC1C,aAAOI,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CN,kBAA7C,CAAP;AACH,KAFI,MAGD;AACA,aAAOK,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAkDN,kBAAlD,CAAP;AACH;AACJ,GAbD;;AAeA,QAAMQ,iBAAiB,GAAIR,kBAAD,IAAwB;AAC9C,WAAOK,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CN,kBAA7C,CAAP;AACH,GAFD;;AAIA,QAAMS,YAAY,GAAIT,kBAAD,IAAwB;AACzC,QAAGA,kBAAkB,CAACU,UAAnB,CAA8B,MAA9B,CAAH,EAAyC;AACrCX,MAAAA,WAAW,CAACC,kBAAD,CAAX;AACH,KAFD,MAGK,IAAGA,kBAAkB,CAACU,UAAnB,CAA8B,KAA9B,CAAH,EAAwC;AACzCH,MAAAA,UAAU,CAACP,kBAAD,CAAV;AACH,KAFI,MAGD;AACAQ,MAAAA,iBAAiB,CAACR,kBAAD,CAAjB;AACH;AACJ,GAVD;;AAYAH,EAAAA,OAAO,CAACc,GAAR,CAAaC,IAAD,IACRH,YAAY,CAACG,IAAD,CADhB;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAKH,CA5DD;;AA8DA,eAAehB,UAAf","sourcesContent":["import React from 'react';\n\nconst Codewriter = ({content}) => {\n\n    const Assembly_code = \"\";\n\n    const pushHandler = (singleLine_content) => {\n        if(singleLine_content.includes(\"constant\")){\n            const temp = singleLine_content.replace(\"push\",\"\");\n            const temp2 = temp.replace(\"constant\",\"\");\n            return console.log(\"This is the Number in the Constant\",temp2);\n        }\n        else if(singleLine_content.includes(\"pointer\")){\n            return console.log(\"This is the Push Pointer Handler\",singleLine_content);\n        }\n        else if(singleLine_content.includes(\"static\")){\n            return console.log(\"This is the Push Static Handler\",singleLine_content)\n        }\n        else{\n            return console.log(\"This is the Push Rest of the Members\",singleLine_content)\n        }\n    }\n    const popHandler = (singleLine_content) => {\n        if(singleLine_content.includes(\"constant\")){\n            return console.log(\"THis is the Pop Constant Handler\",singleLine_content);\n        }\n        else if(singleLine_content.includes(\"pointer\")){\n            return console.log(\"This is the Pop Pointer Handler\",singleLine_content);\n        }\n        else if(singleLine_content.includes(\"static\")){\n            return console.log(\"This is the Pop Static Handler\",singleLine_content)\n        }\n        else{\n            return console.log(\"This is the Pop Rest of the Members\",singleLine_content)\n        }\n    }\n\n    const artihmeticHandler = (singleLine_content) => {\n        return console.log(\"This is the Arthimetic Members\",singleLine_content);\n    }\n\n    const codeReplacer = (singleLine_content) => {\n        if(singleLine_content.startsWith(\"push\")){\n            pushHandler(singleLine_content);\n        }\n        else if(singleLine_content.startsWith(\"pop\")){\n            popHandler(singleLine_content);\n        }\n        else{\n            artihmeticHandler(singleLine_content);\n        }\n    }\n\n    content.map((item) => \n        codeReplacer(item)\n    );\n\n    return (\n        <div>\n            Yo Niggas\n        </div>\n    );\n}\n\nexport default Codewriter;"]},"metadata":{},"sourceType":"module"}