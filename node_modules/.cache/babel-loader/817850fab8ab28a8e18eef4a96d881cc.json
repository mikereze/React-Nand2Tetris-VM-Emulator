{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/Assembler/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport ImportFromFileComponent from './Components/ImportFromFileComponent';\nimport AfterLoad from './Components/AfterLoad';\n\nconst App = () => {\n  let fileReader;\n  const [content, setContent] = useState(\" \");\n  const [loaded, setLoaded] = useState(false);\n\n  const handleFileRead = e => {\n    setLoaded(true);\n    setContent(() => fileReader.result.trim().split(\"\\n\"));\n  };\n\n  const handleFileChosen = file => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    fileReader.readAsText(file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImportFromFileComponent, {\n    handleFileChosen: handleFileChosen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), loaded && /*#__PURE__*/React.createElement(AfterLoad, {\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/mike/Documents/Assembler/src/App.js"],"names":["React","useState","ImportFromFileComponent","AfterLoad","App","fileReader","content","setContent","loaded","setLoaded","handleFileRead","e","result","trim","split","handleFileChosen","file","FileReader","onloadend","readAsText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,uBAAP,MAAoC,sCAApC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAGd,MAAIC,UAAJ;AACA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBN,QAAQ,CAAC,GAAD,CAAvC;AACA,QAAM,CAAEO,MAAF,EAAWC,SAAX,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMS,cAAc,GAAIC,CAAD,IAAO;AACtBF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,IAAAA,UAAU,CAAC,MAAMF,UAAU,CAACO,MAAX,CAAkBC,IAAlB,GAAyBC,KAAzB,CAA+B,IAA/B,CAAP,CAAV;AACP,GAHD;;AAKA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AAC3BX,IAAAA,UAAU,GAAG,IAAIY,UAAJ,EAAb;AACAZ,IAAAA,UAAU,CAACa,SAAX,GAAuBR,cAAvB;AACAL,IAAAA,UAAU,CAACc,UAAX,CAAsBH,IAAtB;AACP,GAJD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,uBAAD;AAAyB,IAAA,gBAAgB,EAAED,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAECP,MAAM,iBAAI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEF,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFX,CADJ;AAMH,CAxBD;;AAyBA,eAAeF,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {useState} from 'react';\nimport ImportFromFileComponent from './Components/ImportFromFileComponent';\nimport AfterLoad from './Components/AfterLoad';\n\n\n\n\nconst App = () => {\n\n\n    let fileReader;\n    const [ content, setContent] = useState(\" \");\n    const [ loaded,  setLoaded] = useState(false);\n\n    const handleFileRead = (e) => {\n            setLoaded(true)\n            setContent(() => fileReader.result.trim().split(\"\\n\"));\n    }\n\n    const handleFileChosen = (file) => {\n            fileReader = new FileReader();\n            fileReader.onloadend = handleFileRead;\n            fileReader.readAsText(file);\n    }\n\n    return (\n        <div>\n        <ImportFromFileComponent handleFileChosen={handleFileChosen}/>\n        {loaded && <AfterLoad content={content}/>}\n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}