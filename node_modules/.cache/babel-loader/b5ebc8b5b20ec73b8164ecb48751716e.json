{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/Nand2Tetris React Projects/VM Translator/src/Components/Codewriter.js\";\nimport React from 'react';\n\nconst Codewriter = ({\n  content\n}) => {\n  const Assembly_code = [\"dsbjfds\"];\n\n  const pushHandler = singleLine => {\n    const singleLine_content = singleLine.replace(\"push\", \"\");\n\n    if (singleLine_content.includes(\"constant\")) {\n      const temp = singleLine_content.replace(\"constant\", \"\");\n      const singleLine_constant = temp.trim();\n      const tobePushed = \"@\" + singleLine_constant;\n      const constant_arr = [tobePushed, \"D=A\", \"@SP\", \"A=M\", \"M=D\", \"@SP\", \"M=M+1\"];\n      [Assembly_code, ...constant_arr];\n      return console.log(\"This is the Number in the Constant\", constant_arr, \"and \", Assembly_code);\n    } else if (singleLine_content.includes(\"pointer\")) {\n      const temp = singleLine_content.replace(\"pointer\", \"\");\n      const singleLine_pointer = temp.trim();\n      return console.log(\"This is the Number in the Pointer\", singleLine_pointer);\n    } else if (singleLine_content.includes(\"static\")) {\n      const temp = singleLine_content.replace(\"static\", \"\");\n      const singleLine_static = temp.trim();\n      return console.log(\"This is the Number in the static\", singleLine_static);\n    } else {\n      return console.log(\"This is the Push Rest of the Members\", singleLine_content);\n    }\n  };\n\n  const popHandler = singleLine_content => {\n    if (singleLine_content.includes(\"constant\")) {\n      return console.log(\"THis is the Pop Constant Handler\", singleLine_content);\n    } else if (singleLine_content.includes(\"pointer\")) {\n      return console.log(\"This is the Pop Pointer Handler\", singleLine_content);\n    } else if (singleLine_content.includes(\"static\")) {\n      return console.log(\"This is the Pop Static Handler\", singleLine_content);\n    } else {\n      return console.log(\"This is the Pop Rest of the Members\", singleLine_content);\n    }\n  };\n\n  const artihmeticHandler = singleLine_content => {\n    return console.log(\"This is the Arthimetic Members\", singleLine_content);\n  };\n\n  const codeReplacer = singleLine_content => {\n    if (singleLine_content.startsWith(\"push\")) {\n      pushHandler(singleLine_content);\n    } else if (singleLine_content.startsWith(\"pop\")) {\n      popHandler(singleLine_content);\n    } else {\n      artihmeticHandler(singleLine_content);\n    }\n  };\n\n  content.map(item => codeReplacer(item));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Yo Niggas\");\n};\n\nexport default Codewriter;","map":{"version":3,"sources":["/home/mike/Documents/Nand2Tetris React Projects/VM Translator/src/Components/Codewriter.js"],"names":["React","Codewriter","content","Assembly_code","pushHandler","singleLine","singleLine_content","replace","includes","temp","singleLine_constant","trim","tobePushed","constant_arr","console","log","singleLine_pointer","singleLine_static","popHandler","artihmeticHandler","codeReplacer","startsWith","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst Codewriter = ({content}) => {\n\n    const Assembly_code = [\"dsbjfds\"];\n\n    const pushHandler = (singleLine) => {\n        const singleLine_content = singleLine.replace(\"push\",\"\");\n        if(singleLine_content.includes(\"constant\")){\n            const temp = singleLine_content.replace(\"constant\",\"\");\n            const singleLine_constant = temp.trim();\n            const tobePushed = \"@\" + singleLine_constant;\n            const constant_arr = [tobePushed,\"D=A\",\"@SP\",\"A=M\",\"M=D\",\"@SP\",\"M=M+1\"];\n            [Assembly_code,...constant_arr];\n            return console.log(\"This is the Number in the Constant\",constant_arr,\"and \",Assembly_code);\n\n        }\n        else if(singleLine_content.includes(\"pointer\")){\n            const temp = singleLine_content.replace(\"pointer\",\"\");\n            const singleLine_pointer = temp.trim();\n            return console.log(\"This is the Number in the Pointer\",singleLine_pointer);\n        }\n        else if(singleLine_content.includes(\"static\")){\n            const temp = singleLine_content.replace(\"static\",\"\");\n            const singleLine_static = temp.trim();\n            return console.log(\"This is the Number in the static\",singleLine_static);\n        }\n        else{\n            return console.log(\"This is the Push Rest of the Members\",singleLine_content)\n        }\n    }\n    const popHandler = (singleLine_content) => {\n        if(singleLine_content.includes(\"constant\")){\n            return console.log(\"THis is the Pop Constant Handler\",singleLine_content);\n        }\n        else if(singleLine_content.includes(\"pointer\")){\n            return console.log(\"This is the Pop Pointer Handler\",singleLine_content);\n        }\n        else if(singleLine_content.includes(\"static\")){\n            return console.log(\"This is the Pop Static Handler\",singleLine_content)\n        }\n        else{\n            return console.log(\"This is the Pop Rest of the Members\",singleLine_content)\n        }\n    }\n\n    const artihmeticHandler = (singleLine_content) => {\n        return console.log(\"This is the Arthimetic Members\",singleLine_content);\n    }\n\n    const codeReplacer = (singleLine_content) => {\n        if(singleLine_content.startsWith(\"push\")){\n            pushHandler(singleLine_content);\n        }\n        else if(singleLine_content.startsWith(\"pop\")){\n            popHandler(singleLine_content);\n        }\n        else{\n            artihmeticHandler(singleLine_content);\n        }\n    }\n\n    content.map((item) => \n        codeReplacer(item)\n    );\n\n    return (\n        <div>\n            Yo Niggas\n        </div>\n    );\n}\n\nexport default Codewriter;"]},"metadata":{},"sourceType":"module"}