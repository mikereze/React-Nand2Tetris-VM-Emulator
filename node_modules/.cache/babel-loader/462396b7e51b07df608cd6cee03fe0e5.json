{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/Nand2Tetris React Projects/VM Translator/src/App.js\";\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport ImportFromFileComponent from './Components/ImportFromFileComponent';\nimport AfterLoad from './Components/AfterLoad';\n\nconst App = () => {\n  const divider = (item, len) => {\n    const regexFiles = /[A-Za-z0-9].vm/;\n\n    for (var x = 0; x < len; x++) {\n      if (regexFiles.test(item[x].name)) {\n        handleFileChosen(item[x]);\n        console.log(\"Yes baby\", item[x]);\n      }\n    }\n  };\n\n  let fileReader;\n  let toBePushed;\n  const [content, setContent] = useState();\n  const [loaded, setLoaded] = useState(false);\n\n  const handleFileRead = e => {\n    setLoaded(true);\n    console.log(\"THis is the TObe Pushed Variable\");\n    toBePushed = fileReader.result;\n    setContent(prevState => {\n      return Object.assign(prevState, e.target.result.trim().split(\"\\n\"));\n    });\n  };\n\n  const handleFileChosen = file => {\n    fileReader = new FileReader();\n    fileReader.onload = handleFileRead;\n    fileReader.readAsText(file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    directory: \"\",\n    webkitdirectory: \"\",\n    onChange: e => divider(e.target.files, e.target.files.length),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/mike/Documents/Nand2Tetris React Projects/VM Translator/src/App.js"],"names":["React","useEffect","useState","ImportFromFileComponent","AfterLoad","App","divider","item","len","regexFiles","x","test","name","handleFileChosen","console","log","fileReader","toBePushed","content","setContent","loaded","setLoaded","handleFileRead","e","result","prevState","Object","assign","target","trim","split","file","FileReader","onload","readAsText","files","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,uBAAP,MAAoC,sCAApC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEd,QAAMC,OAAO,GAAG,CAACC,IAAD,EAAMC,GAAN,KAAc;AAC1B,UAAMC,UAAU,GAAG,gBAAnB;;AACC,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,GAAd,EAAkBE,CAAC,EAAnB,EAAsB;AACnB,UAAGD,UAAU,CAACE,IAAX,CAAgBJ,IAAI,CAACG,CAAD,CAAJ,CAAQE,IAAxB,CAAH,EAAiC;AACzBC,QAAAA,gBAAgB,CAACN,IAAI,CAACG,CAAD,CAAL,CAAhB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBR,IAAI,CAACG,CAAD,CAA3B;AAGP;AACR;AACJ,GAVG;;AAYA,MAAIM,UAAJ;AACA,MAAIC,UAAJ;AACA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBjB,QAAQ,EAAvC;AACA,QAAM,CAAEkB,MAAF,EAAWC,SAAX,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;;AAKA,QAAMoB,cAAc,GAAIC,CAAD,IAAO;AACtBF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAE,IAAAA,UAAU,GAAGD,UAAU,CAACQ,MAAxB;AACAL,IAAAA,UAAU,CAAEM,SAAD,IAAe;AACtB,aAAOC,MAAM,CAACC,MAAP,CAAcF,SAAd,EAAwBF,CAAC,CAACK,MAAF,CAASJ,MAAT,CAAgBK,IAAhB,GAAuBC,KAAvB,CAA6B,IAA7B,CAAxB,CAAP;AACH,KAFS,CAAV;AAKP,GATD;;AAWA,QAAMjB,gBAAgB,GAAIkB,IAAD,IAAU;AAE3Bf,IAAAA,UAAU,GAAG,IAAIgB,UAAJ,EAAb;AACAhB,IAAAA,UAAU,CAACiB,MAAX,GAAoBX,cAApB;AACAN,IAAAA,UAAU,CAACkB,UAAX,CAAsBH,IAAtB;AACP,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACS,IAAA,IAAI,EAAC,MADd;AAES,IAAA,SAAS,EAAC,EAFnB;AAGS,IAAA,eAAe,EAAC,EAHzB;AAIS,IAAA,QAAQ,EAAIR,CAAD,IAAOjB,OAAO,CAACiB,CAAC,CAACK,MAAF,CAASO,KAAV,EAAgBZ,CAAC,CAACK,MAAF,CAASO,KAAT,CAAeC,MAA/B,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AAUH,CAlDD;;AAmDA,eAAe/B,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport {useState} from 'react';\nimport ImportFromFileComponent from './Components/ImportFromFileComponent';\nimport AfterLoad from './Components/AfterLoad';\n\nconst App = () => {\n\n    const divider = (item,len) => {\n        const regexFiles = /[A-Za-z0-9].vm/\n         for(var x=0;x<len;x++){\n            if(regexFiles.test(item[x].name)){\n                    handleFileChosen(item[x]);\n                    console.log(\"Yes baby\",item[x])\n                \n               \n            }\n    }\n}\n\n    let fileReader;\n    let toBePushed;\n    const [ content, setContent] = useState();\n    const [ loaded,  setLoaded] = useState(false);\n\n\n\n\n    const handleFileRead = (e) => {\n            setLoaded(true)\n            console.log(\"THis is the TObe Pushed Variable\", );\n            toBePushed = fileReader.result;\n            setContent((prevState) => {\n                return Object.assign(prevState,e.target.result.trim().split(\"\\n\"))\n            })\n            \n\n    }\n\n    const handleFileChosen = (file) => {\n            \n            fileReader = new FileReader();\n            fileReader.onload = handleFileRead;\n            fileReader.readAsText(file);\n    }\n\n    return (\n        <div>\n        <input \n                 type=\"file\"\n                 directory=\"\"\n                 webkitdirectory=\"\"\n                 onChange={ (e) => divider(e.target.files,e.target.files.length)}/>\n        {/* {loaded && <AfterLoad content={content}/>} */}\n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}