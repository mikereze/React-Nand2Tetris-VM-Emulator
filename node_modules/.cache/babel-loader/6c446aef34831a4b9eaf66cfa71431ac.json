{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/Assembler/src/Components/Ainstruction.js\";\nimport Cinstruction from './Cinstruction';\nimport React from 'react';\n\nconst Ainstruction = ({\n  content\n}) => {\n  var regex = /@[0-9]/;\n\n  const digits_count = n => {\n    var count = 0;\n    if (n >= 0) ++count;\n\n    while (n / 10 >= 1) {\n      n /= 10;\n      ++count;\n    }\n\n    return count;\n  };\n\n  const decimaltoBinary = toBeBinary => {\n    const removedAt = toBeBinary.replace('@', '');\n    const converted = parseInt(removedAt, 10).toString(2);\n    const toBeFilled = 16 - digits_count(converted);\n    const filler = '0'.repeat(toBeFilled);\n    const binary = filler + converted;\n    return binary;\n  };\n\n  for (var x = 0; x < content.length; x++) {\n    if (regex.test(content[x])) {\n      const value = decimaltoBinary(content[x]);\n      content[x] = value;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Cinstruction, {\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Ainstruction;","map":{"version":3,"sources":["/home/mike/Documents/Assembler/src/Components/Ainstruction.js"],"names":["Cinstruction","React","Ainstruction","content","regex","digits_count","n","count","decimaltoBinary","toBeBinary","removedAt","replace","converted","parseInt","toString","toBeFilled","filler","repeat","binary","x","length","test","value"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAEhC,MAAIC,KAAK,GAAG,QAAZ;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAGD,CAAC,IAAI,CAAR,EAAW,EAAEC,KAAF;;AACX,WAAOD,CAAC,GAAC,EAAF,IAAQ,CAAf,EAAiB;AACbA,MAAAA,CAAC,IAAG,EAAJ;AACA,QAAEC,KAAF;AACH;;AACD,WAAOA,KAAP;AACH,GARD;;AAWA,QAAMC,eAAe,GAAIC,UAAD,IAAgB;AACpC,UAAMC,SAAS,GAAGD,UAAU,CAACE,OAAX,CAAmB,GAAnB,EAAuB,EAAvB,CAAlB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACH,SAAD,EAAW,EAAX,CAAR,CAAuBI,QAAvB,CAAgC,CAAhC,CAAlB;AACA,UAAMC,UAAU,GAAG,KAAKV,YAAY,CAACO,SAAD,CAApC;AACA,UAAMI,MAAM,GAAG,IAAIC,MAAJ,CAAWF,UAAX,CAAf;AACA,UAAMG,MAAM,GAAGF,MAAM,GAAGJ,SAAxB;AACA,WAAOM,MAAP;AAEH,GARD;;AAWA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAChB,OAAO,CAACiB,MAAtB,EAA6BD,CAAC,EAA9B,EAAiC;AAC7B,QAAGf,KAAK,CAACiB,IAAN,CAAWlB,OAAO,CAACgB,CAAD,CAAlB,CAAH,EAA0B;AACtB,YAAMG,KAAK,GAAGd,eAAe,CAACL,OAAO,CAACgB,CAAD,CAAR,CAA7B;AACAhB,MAAAA,OAAO,CAACgB,CAAD,CAAP,GAAaG,KAAb;AACH;AACJ;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEnB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CArCD;;AAuCA,eAAeD,YAAf","sourcesContent":["import Cinstruction from './Cinstruction';\nimport React from 'react';\n\n\nconst Ainstruction = ({content}) => {\n\n    var regex = /@[0-9]/;\n\n    const digits_count = (n) => {\n        var count = 0;\n        if(n >= 0) ++count;\n        while (n/10 >= 1){\n            n/= 10;\n            ++count;\n        }\n        return count\n    }\n\n\n    const decimaltoBinary = (toBeBinary) => {\n        const removedAt = toBeBinary.replace('@','');\n        const converted = parseInt(removedAt,10).toString(2);\n        const toBeFilled = 16 - digits_count(converted);\n        const filler = '0'.repeat(toBeFilled);\n        const binary = filler + converted;\n        return binary;\n\n    }\n\n    \n    for(var x=0;x<content.length;x++){\n        if(regex.test(content[x])){\n            const value = decimaltoBinary(content[x]);\n            content[x] = value;\n        }\n    }\n    return (\n        <div>\n            <Cinstruction content={content}/>\n        </div>\n    );\n}\n\nexport default Ainstruction;"]},"metadata":{},"sourceType":"module"}