{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/Quiz/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport initialQuestion from './questions.json';\nimport './App.css';\nimport Score from './Components/Score/index';\nimport Buttons from './Components/Buttons/index';\nimport Questiontitle from './Components/Questiontitle/index';\nimport Result from './Components/Result/index';\nimport Rate from './Components/Rate/index';\nimport QuestionInfo from './Components/QuestionInfo/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueGrabber = counter => {\n      return [unescape(this.state.questions[counter].incorrect_answers[0]), unescape(this.state.questions[counter].correct_answer), unescape(this.state.questions[counter].incorrect_answers[1]), unescape(this.state.questions[counter].incorrect_answers[2])];\n    };\n\n    this.shuffle = o => {\n      for (var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\n      return o;\n    };\n\n    this.handleNextQuestion = () => {\n      if (this.state.counter === 18) {\n        console.log(\"THis is the Button needs to be cancelled\");\n        this.setState({\n          buttonDisabler: true\n        });\n      }\n\n      if (this.state.counter !== 19) {\n        let nextCount = 0;\n        let handleCount = [];\n        const ran = this.shuffle(this.valueGrabber(this.state.counter + 1));\n\n        if (ran.includes(\"undefined\")) {\n          ran.map(item => {\n            if (item === \"undefined\") {\n              handleCount.push(nextCount);\n              nextCount++;\n              return handleCount;\n            } else {\n              nextCount++;\n              return true;\n            }\n          });\n        } //  Promise.all([\n        //  this.setState({truefalseFilter : {first:false,second:false,third:false,fourth:false}})]).then(() => {\n\n\n        handleCount.map(item2 => {\n          console.log(item2);\n\n          if (item2 === 0) {\n            console.log(\"I'm about to update 0\");\n            this.setState(Object.assign(this.state.truefalseFilter, {\n              first: true\n            }));\n            return true;\n          } else if (item2 === 1) {\n            console.log(\"I'm about to update 1\");\n            this.setState(Object.assign(this.state.truefalseFilter, {\n              second: true\n            }));\n            return true;\n          } else if (item2 === 2) {\n            console.log(\"i'm about to update 2\");\n            this.setState(Object.assign(this.state.truefalseFilter, {\n              third: true\n            }));\n            return true;\n          } else {\n            console.log(\"I'ma bout to update 3\");\n            this.setState(Object.assign(this.state.truefalseFilter, {\n              fourth: true\n            }));\n            return true;\n          }\n        });\n        this.setState({\n          randomArray: ran\n        });\n        this.setState(prevState => ({\n          counter: prevState.counter + 1,\n          previewCorrect: false,\n          previewIncorrect: false,\n          disability: {\n            first: false,\n            second: false,\n            third: false,\n            fourth: false\n          },\n          previewNextQuestion: false,\n          letsStyle: {\n            first: false,\n            second: false,\n            third: false,\n            fourth: false\n          },\n          correctOne: {\n            first: false,\n            second: false,\n            third: false,\n            fourth: false\n          }\n        }));\n      }\n    };\n\n    this.handleAllAnswer = (rand, toBeStyled) => {\n      const correctAns = unescape(this.state.questions[this.state.counter].correct_answer);\n      let count = 0;\n      let realCount = 0;\n      let ans = 0;\n      rand.map(item => {\n        if (item === correctAns) {\n          realCount = count;\n          return realCount;\n        } else {\n          count++;\n          return true;\n        }\n      });\n\n      if (realCount === 0) {\n        this.setState(Object.assign(this.state.correctOne, {\n          first: true\n        }));\n      } else if (realCount === 1) {\n        this.setState(Object.assign(this.state.correctOne, {\n          second: true\n        }));\n      } else if (realCount === 2) {\n        this.setState(Object.assign(this.state.correctOne, {\n          third: true\n        }));\n      } else if (realCount === 3) {\n        this.setState(Object.assign(this.state.correctOne, {\n          fourth: true\n        }));\n      }\n\n      if (toBeStyled === 'first') {\n        ans = this.state.randomArray[0];\n        this.setState(Object.assign(this.state.disability, {\n          second: true,\n          third: true,\n          fourth: true\n        }));\n        this.setState(Object.assign(this.state.letsStyle, {\n          first: true\n        }));\n      }\n\n      if (toBeStyled === 'second') {\n        ans = this.state.randomArray[1];\n        this.setState(Object.assign(this.state.disability, {\n          first: true,\n          third: true,\n          fourth: true\n        }));\n        this.setState(Object.assign(this.state.letsStyle, {\n          second: true\n        }));\n      }\n\n      if (toBeStyled === 'third') {\n        ans = this.state.randomArray[2];\n        this.setState(Object.assign(this.state.disability, {\n          first: true,\n          second: true,\n          fourth: true\n        }));\n        this.setState(Object.assign(this.state.letsStyle, {\n          third: true\n        }));\n      }\n\n      if (toBeStyled === 'fourth') {\n        ans = this.state.randomArray[3];\n        this.setState(Object.assign(this.state.disability, {\n          first: true,\n          second: true,\n          third: true\n        }));\n        this.setState(Object.assign(this.state.letsStyle, {\n          fourth: true\n        }));\n      }\n\n      if (ans === unescape(this.state.questions[this.state.counter].correct_answer)) {\n        console.log(\"Nigga I'm correct\");\n        Promise.all([this.setState(prevState => {\n          return {\n            correct: prevState.correct + 1\n          };\n        })]).then(() => this.setState({\n          minScore: this.state.correct * 5,\n          sofarScore: Math.round(this.state.correct / (this.state.counter + 1) * 100),\n          maxScore: Math.round((20 - this.state.incorrect) / 20 * 100)\n        }));\n        return this.setState({\n          previewCorrect: true,\n          previewIncorrect: false,\n          previewNextQuestion: true\n        });\n      }\n\n      if (ans !== unescape(this.state.questions[this.state.counter].correct_answer)) {\n        console.log(\"Nigga I'm incorrect\");\n        Promise.all([this.setState(prevState => ({\n          incorrect: prevState.incorrect + 1\n        }))]).then(() => this.setState({\n          sofarScore: Math.round(this.state.correct / (this.state.counter + 1) * 100),\n          maxScore: Math.round((20 - this.state.incorrect) / 20 * 100)\n        }));\n        return this.setState({\n          previewIncorrect: true,\n          previewCorrect: false,\n          previewNextQuestion: true\n        });\n      }\n    };\n\n    this.state = {\n      questions: initialQuestion,\n      counter: 0,\n      previewCorrect: false,\n      previewIncorrect: false,\n      disability: {\n        first: false,\n        second: false,\n        third: false,\n        fourth: false\n      },\n      letsStyle: {\n        first: false,\n        second: false,\n        third: false,\n        fourth: false\n      },\n      correctOne: {\n        first: false,\n        second: false,\n        third: false,\n        fourth: false\n      },\n      correct: 0,\n      incorrect: 0,\n      maxScore: 100,\n      minScore: 0,\n      sofarScore: 0,\n      previewNextQuestion: false,\n      truefalseFilter: {\n        first: false,\n        second: false,\n        third: false,\n        fourth: false\n      },\n      buttonDisabler: false,\n      randomArray: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      randomArray: this.shuffle([unescape(this.state.questions[0].incorrect_answers[0]), unescape(this.state.questions[0].correct_answer), unescape(this.state.questions[0].incorrect_answers[1]), unescape(this.state.questions[0].incorrect_answers[2])])\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      counter: 0\n    });\n  }\n\n  render() {\n    const {\n      questions,\n      counter,\n      previewCorrect,\n      previewIncorrect,\n      disability,\n      letsStyle,\n      minScore,\n      maxScore,\n      sofarScore,\n      previewNextQuestion,\n      correctOne,\n      randomArray,\n      truefalseFilter,\n      buttonDisabler\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"body_\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(QuestionInfo, {\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(Rate, {\n      questions: questions,\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mainBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Questiontitle, {\n      questions: questions,\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(Buttons, {\n      truefalseFilter: truefalseFilter,\n      letsStyle: letsStyle,\n      disability: disability,\n      correctOne: correctOne,\n      previewCorrect: previewCorrect,\n      previewIncorrect: previewIncorrect,\n      randomArray: randomArray,\n      handleAllAnswer: this.handleAllAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(Result, {\n      previewCorrect: previewCorrect,\n      previewIncorrect: previewIncorrect,\n      buttonDisabler: buttonDisabler,\n      previewNextQuestion: previewNextQuestion,\n      handleNextQuestion: this.handleNextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(Score, {\n      minScore: minScore,\n      maxScore: maxScore,\n      sofarScore: sofarScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mike/Documents/Quiz/src/App.js"],"names":["React","Component","initialQuestion","Score","Buttons","Questiontitle","Result","Rate","QuestionInfo","App","constructor","props","valueGrabber","counter","unescape","state","questions","incorrect_answers","correct_answer","shuffle","o","j","x","i","length","parseInt","Math","random","handleNextQuestion","console","log","setState","buttonDisabler","nextCount","handleCount","ran","includes","map","item","push","item2","Object","assign","truefalseFilter","first","second","third","fourth","randomArray","prevState","previewCorrect","previewIncorrect","disability","previewNextQuestion","letsStyle","correctOne","handleAllAnswer","rand","toBeStyled","correctAns","count","realCount","ans","Promise","all","correct","then","minScore","sofarScore","round","maxScore","incorrect","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport initialQuestion from './questions.json';\nimport './App.css';\nimport Score from './Components/Score/index';\nimport Buttons from './Components/Buttons/index';\nimport Questiontitle from './Components/Questiontitle/index';\nimport Result from './Components/Result/index';\nimport Rate from './Components/Rate/index';\nimport QuestionInfo from './Components/QuestionInfo/index'\nclass App extends Component{\n\n    constructor(props){\n            super(props);\n\n            this.state = {\n                questions :  initialQuestion,\n                counter : 0,\n                previewCorrect : false,\n                previewIncorrect : false,\n                disability : {first:false,second:false,third:false,fourth:false},\n                letsStyle : {first:false,second:false,third:false,fourth:false},\n                correctOne:{first:false,second:false,third:false,fourth:false},\n                correct: 0,\n                incorrect: 0,\n                maxScore : 100,\n                minScore : 0,\n                sofarScore : 0,\n                previewNextQuestion : false,\n                truefalseFilter:{first:false,second:false,third:false,fourth:false},\n                buttonDisabler: false,\n                randomArray :[]\n            }   \n    }\n \n    componentDidMount(){\n        this.setState({randomArray:this.shuffle([\n            unescape(this.state.questions[0].incorrect_answers[0]),\n            unescape(this.state.questions[0].correct_answer),\n            unescape(this.state.questions[0].incorrect_answers[1]),\n            unescape(this.state.questions[0].incorrect_answers[2])])\n    })\n}\n\n    componentWillUnmount() {\n        this.setState({counter: 0})\n    }\n\nvalueGrabber = (counter) => {\n    return [\n        unescape(this.state.questions[counter].incorrect_answers[0]),\n        unescape(this.state.questions[counter].correct_answer),\n        unescape(this.state.questions[counter].incorrect_answers[1]),\n        unescape(this.state.questions[counter].incorrect_answers[2])\n    ];\n}\n\n\n shuffle = (o) => {\n    for(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n    return o;\n};\n\nhandleNextQuestion = () => {\n    if(this.state.counter === 18){\n        console.log(\"THis is the Button needs to be cancelled\");\n        this.setState({buttonDisabler : true})\n       }\n    if(this.state.counter !== 19){\n     let nextCount = 0;\n     let handleCount = [];\n     const ran = this.shuffle(this.valueGrabber(this.state.counter + 1));\n     if(ran.includes(\"undefined\")){\n         ran.map((item) => {\n             if(item === \"undefined\"){\n                \n             handleCount.push(nextCount);\n             nextCount++;\n             return handleCount;\n             }\n             else{\n                 nextCount++;\n                 return true;\n             }\n         })\n     }   \n    //  Promise.all([\n    //  this.setState({truefalseFilter : {first:false,second:false,third:false,fourth:false}})]).then(() => {\n\n         handleCount.map((item2) => {\n             console.log(item2);\n             if(item2 === 0){\n                 console.log(\"I'm about to update 0\");\n                 this.setState(Object.assign(this.state.truefalseFilter,{first:true}));\n                 return true;\n             }\n             else if(item2 === 1){\n                 console.log(\"I'm about to update 1\");\n                 this.setState(Object.assign(this.state.truefalseFilter,{second:true}));\n                return true;\n             }\n             else if(item2 === 2){\n                 console.log(\"i'm about to update 2\");\n                 this.setState(Object.assign(this.state.truefalseFilter,{third:true}));\n                 return true;\n             }\n             else {\n                 console.log(\"I'ma bout to update 3\");\n                 this.setState(Object.assign(this.state.truefalseFilter,{fourth:true}));\n                 return true;\n             }\n\n\n         })\n\n     \n       \n         \n\n     this.setState({randomArray : ran});\n     \n       this.setState((prevState) => ({ \n         counter : prevState.counter + 1,\n         previewCorrect : false,\n         previewIncorrect : false,\n         disability: {first:false,second:false,third:false,fourth:false},\n         previewNextQuestion:false,\n         letsStyle : {first:false,second:false,third:false,fourth:false},\n         correctOne : {first:false,second:false,third:false,fourth:false}\n     }));\n\n}\n\n}\n\nhandleAllAnswer = (rand,toBeStyled) => {\n    const correctAns = unescape(this.state.questions[this.state.counter].correct_answer);\n    let count = 0;\n    let realCount = 0;\n    let ans = 0;\n    rand.map((item) => {\n       \n        if(item === correctAns){\n            realCount = count;\n               return  realCount;\n        }\n        else{\n            count++;\n            return true;\n        }\n        \n    })\n\n    if(realCount === 0){\n        this.setState(Object.assign(this.state.correctOne,{first:true}));\n    }\n    else if(realCount === 1){\n        this.setState(Object.assign(this.state.correctOne,{second:true}));\n    }\n    else if(realCount === 2){\n        this.setState(Object.assign(this.state.correctOne,{third:true}));\n    }\n    else if(realCount === 3){\n        this.setState(Object.assign(this.state.correctOne,{fourth:true}));\n    }\n        if(toBeStyled === 'first'){\n        ans = this.state.randomArray[0];\n        this.setState(Object.assign(this.state.disability,{second:true,third:true,fourth:true}));\n        this.setState(Object.assign(this.state.letsStyle,{first:true}));\n        \n       }\n        if(toBeStyled === 'second'){\n            ans = this.state.randomArray[1];\n        this.setState(Object.assign(this.state.disability,{first:true,third:true,fourth:true}));\n        this.setState(Object.assign(this.state.letsStyle,{second:true}));\n        \n       }\n        if(toBeStyled === 'third'){\n            ans = this.state.randomArray[2];\n        this.setState(Object.assign(this.state.disability,{first:true,second:true,fourth:true}));\n        this.setState(Object.assign(this.state.letsStyle,{third:true}))\n       }\n        if(toBeStyled === 'fourth'){\n            ans = this.state.randomArray[3];\n        this.setState(Object.assign(this.state.disability,{first:true,second:true,third:true}));\n        this.setState(Object.assign(this.state.letsStyle,{fourth:true}));\n       }\n\n\n\n      \n       if(ans === unescape(this.state.questions[this.state.counter].correct_answer)){\n\n        console.log(\"Nigga I'm correct\");\n\n                Promise.all([\n                    this.setState((prevState) => {return {\n                        correct : prevState.correct + 1,\n                }})\n\n                ]).then(()=>this.setState(\n                    {\n                        minScore : (this.state.correct * 5),\n                        sofarScore : Math.round((this.state.correct/(this.state.counter+1)*100)),\n                        maxScore: Math.round(((20 - this.state.incorrect)/20)*100)\n                    }\n                ))\n                return this.setState({\n                    previewCorrect : true,\n                    previewIncorrect: false,\n                    previewNextQuestion : true,\n\n\n                });\n            }\n        if(ans !== unescape(this.state.questions[this.state.counter].correct_answer)){\n\n            console.log(\"Nigga I'm incorrect\");\n\n                Promise.all([\n                this.setState((prevState) => ({ incorrect : prevState.incorrect + 1}) ) ]).then(\n                    ()=>  this.setState({\n                    sofarScore : Math.round((this.state.correct/(this.state.counter+1)*100)),\n                    maxScore: Math.round(((20 - this.state.incorrect)/20)*100)\n                    })         \n                );\n                return this.setState({\n                    previewIncorrect : true,\n                    previewCorrect: false,\n                    previewNextQuestion : true,\n          \n                  })\n\n        }\n\n      \n   }\n\n   \n\n    render() {\n       const {questions, counter,previewCorrect,\n             previewIncorrect,disability,letsStyle,\n             minScore,maxScore,sofarScore,previewNextQuestion,\n             correctOne,randomArray,truefalseFilter,buttonDisabler} = this.state;\n        return (\n            <div className=\"body_\">\n            <div className=\"header\">\n            <QuestionInfo counter={counter}/>\n           <Rate questions = {questions} counter={counter}/>\n           </div>\n           <div className=\"mainBody\">\n               \n              <Questiontitle \n              questions={questions}\n              counter={counter}/>\n\n               <Buttons\n               truefalseFilter = {truefalseFilter} \n               letsStyle={letsStyle} \n               disability={disability}\n               correctOne={correctOne} \n               previewCorrect={previewCorrect}\n               previewIncorrect={previewIncorrect}\n               randomArray={randomArray}\n               handleAllAnswer={this.handleAllAnswer}/>\n                \n                <Result   \n                previewCorrect={previewCorrect}\n                previewIncorrect={previewIncorrect}\n                buttonDisabler={buttonDisabler}\n                previewNextQuestion={previewNextQuestion}\n                handleNextQuestion={this.handleNextQuestion}/>\n\n                <Score \n                minScore={minScore} \n                maxScore={maxScore} \n                sofarScore={sofarScore}/>\n            </div>    \n           \n            </div>\n        );\n        }  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}